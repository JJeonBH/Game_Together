# DB 삭제/생성/사용
DROP DATABASE IF EXISTS GT;
CREATE DATABASE GT;
USE GT;

# member 테이블 생성
CREATE TABLE `member`(
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	regDate DATETIME NOT NULL,
	updateDate DATETIME NOT NULL,
	loginId VARCHAR(20) NOT NULL UNIQUE,
	loginPw VARCHAR(100) NOT NULL,
	`authLevel` SMALLINT UNSIGNED NOT NULL DEFAULT 3 COMMENT '권한 레벨 (일반 = 3, 관리자 = 7)',
	`name` VARCHAR(20) NOT NULL,
	nickname VARCHAR(20) NOT NULL,
    birthday VARCHAR(20) NOT NULL COMMENT '생년월일',
    gender VARCHAR(10) NOT NULL COMMENT '성별 (남자 = male, 여자 = female)',
	email VARCHAR(50),
	cellphoneNum VARCHAR(20) NOT NULL,
	delStatus TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT '탈퇴여부 (탈퇴 전 = 0, 탈퇴 후 = 1)',
	delDate DATETIME COMMENT '탈퇴 날짜'
);

# article 테이블 생성
CREATE TABLE article(
    id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    regDate DATETIME NOT NULL,
    updateDate DATETIME NOT NULL,
    memberId INT UNSIGNED NOT NULL,
    boardId INT UNSIGNED NOT NULL,
    title VARCHAR(100) NOT NULL,
    `body` TEXT NOT NULL,
    viewCount INT UNSIGNED NOT NULL DEFAULT 0 
);

# board 테이블 생성
CREATE TABLE board(
    id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    regDate DATETIME NOT NULL,
    updateDate DATETIME NOT NULL,
    `type` VARCHAR(20) NOT NULL COMMENT 'lol(리그오브레전드), bg(배틀그라운드), ...',
    `code` VARCHAR(20) NOT NULL COMMENT 'notice(공지사항), free(자유), ...',
	`name` VARCHAR(20) NOT NULL COMMENT '게시판 이름',
	delStatus TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT '삭제여부 (삭제 전 = 0, 삭제 후 = 1)',
	delDate DATETIME COMMENT '삭제 날짜'
);

# reactionPoint 테이블 생성
CREATE TABLE reactionPoint(
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	regDate DATETIME NOT NULL,
	updateDate DATETIME NOT NULL,
    memberId INT UNSIGNED NOT NULL,
    relTypeCode VARCHAR(20) NOT NULL COMMENT '관련 데이터 타입 코드 (article(게시물에 추천), reply(댓글에 추천), ...)',
    relId INT UNSIGNED NOT NULL COMMENT '관련 데이터 번호',
	`point` TINYINT UNSIGNED NOT NULL DEFAULT 1
);

# reply 테이블 생성
CREATE TABLE reply(
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	regDate DATETIME NOT NULL,
	updateDate DATETIME NOT NULL,
    memberId INT UNSIGNED NOT NULL,
    relTypeCode VARCHAR(20) NOT NULL COMMENT '관련 데이터 타입 코드 (article(게시물에 댓글), reply(댓글에 댓글), ...)',
    relId INT UNSIGNED NOT NULL COMMENT '관련 데이터 번호',
	`body` TEXT NOT NULL
);

# chat 테이블 생성
CREATE TABLE chat(
    id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    regDate DATETIME NOT NULL,
    chatRoomId INT UNSIGNED NOT NULL,
    memberId INT UNSIGNED NOT NULL,
    message TEXT NOT NULL,
    recipientId INT UNSIGNED NOT NULL COMMENT '전체 채팅이면 0, 귓속말이면 받는 멤버의 id',
    banMemberId INT UNSIGNED NOT NULL COMMENT '강퇴당한 멤버의 id',
    messageType VARCHAR(20) NOT NULL
);

# chatRoom 테이블 생성
CREATE TABLE chatRoom(
    id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    regDate DATETIME NOT NULL,
    memberId INT UNSIGNED NOT NULL UNIQUE,
    `name` VARCHAR(50) NOT NULL,
    maxMemberCount INT UNSIGNED NOT NULL,
    `status` VARCHAR(20) NOT NULL,
    `password` VARCHAR(100)
);

# chatRoomMember 테이블 생성
CREATE TABLE chatRoomMember(
    id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    regDate DATETIME NOT NULL,
    chatRoomId INT UNSIGNED NOT NULL,
    memberId INT UNSIGNED NOT NULL UNIQUE,
    sessionId VARCHAR(50) NOT NULL
);

# member 테스트 데이터
INSERT INTO `member`
SET regDate = NOW(),
updateDate = NOW(),
loginId = 'admin',
loginPw = SHA2('Wjsqudgh0@', 256),
`authLevel` = 7,
`name` = '전병호',
nickname = '관리자',
birthday = '19911010',
gender = 'male',
email = 'admin@naver.com',
cellphoneNum = '01011111111';

# member 테스트 데이터
INSERT INTO `member`
SET regDate = NOW(),
updateDate = NOW(),
loginId = 'test1',
loginPw = SHA2('Wjsqudgh1@', 256),
`name` = '홍길동',
nickname = '유저1',
birthday = '19921010',
gender = 'male',
email = 'test1@naver.com',
cellphoneNum = '01011121112';

# member 테스트 데이터
INSERT INTO `member`
SET regDate = NOW(),
updateDate = NOW(),
loginId = 'test2',
loginPw = SHA2('Wjsqudgh2@', 256),
`name` = '홍길순',
nickname = '유저2',
birthday = '19931010',
gender = 'female',
email = 'test2@naver.com',
cellphoneNum = '01011131113';

# member 테스트 데이터
INSERT INTO `member`
SET regDate = NOW(),
updateDate = NOW(),
loginId = 'test3',
loginPw = SHA2('Wjsqudgh3@', 256),
`name` = '임꺽정',
nickname = '임꺼억',
birthday = '19941010',
gender = 'male',
email = 'test3@naver.com',
cellphoneNum = '01011141114';

# member 테스트 데이터
INSERT INTO `member`
SET regDate = NOW(),
updateDate = NOW(),
loginId = 'test4',
loginPw = SHA2('Wjsqudgh4@', 256),
`name` = '임꺽순',
nickname = '꺽순',
birthday = '19951010',
gender = 'female',
email = 'test4@naver.com',
cellphoneNum = '01011151115';

# article 테스트 데이터
INSERT INTO article
SET regDate = NOW(),
updateDate = NOW(),
memberId = 1,
boardId = 1,
title = '롤 공지사항(필독)',
`body` = '공지사항입니다.';

# article 테스트 데이터
INSERT INTO article
SET regDate = NOW(),
updateDate = NOW(),
memberId = 2,
boardId = 2,
title = '안녕하세요.',
`body` = '반갑습니다.';

# article 테스트 데이터
INSERT INTO article
SET regDate = NOW(),
updateDate = NOW(),
memberId = 2,
boardId = 3,
title = '1빠',
`body` = '^^';

# article 테스트 데이터
INSERT INTO article
SET regDate = NOW(),
updateDate = NOW(),
memberId = 3,
boardId = 4,
title = '트롤 유저 신고합니다.',
`body` = '고의 트롤입니다 신고요.';

# article 테스트 데이터
INSERT INTO article
SET regDate = NOW(),
updateDate = NOW(),
memberId = 1,
boardId = 5,
title = '배그 공지사항(필독)',
`body` = '꼭 읽으세요.';

# article 테스트 데이터
INSERT INTO article
SET regDate = NOW(),
updateDate = NOW(),
memberId = 3,
boardId = 6,
title = '안녕하세요~~',
`body` = '반가워요~~~';

# article 테스트 데이터
INSERT INTO article
SET regDate = NOW(),
updateDate = NOW(),
memberId = 3,
boardId = 7,
title = '여기가 자유 게시판??',
`body` = '안녕!!';

# article 테스트 데이터
INSERT INTO article
SET regDate = NOW(),
updateDate = NOW(),
memberId = 2,
boardId = 8,
title = '팀킬 유저 신고합니다.',
`body` = '갑자기 팀킬하고 욕하네요. 제발 정지좀!!!';

# board 테스트 데이터
INSERT INTO board
SET regDate = NOW(),
updateDate = NOW(),
`type` = 'lol',
`code` = 'notice',
`name` = '공지사항';

# board 테스트 데이터
INSERT INTO board
SET regDate = NOW(),
updateDate = NOW(),
`type` = 'lol',
`code` = 'greeting',
`name` = '가입 인사';

# board 테스트 데이터
INSERT INTO board
SET regDate = NOW(),
updateDate = NOW(),
`type` = 'lol',
`code` = 'free',
`name` = '자유 게시판';

# board 테스트 데이터
INSERT INTO board
SET regDate = NOW(),
updateDate = NOW(),
`type` = 'lol',
`code` = 'declaration',
`name` = '신고 게시판';

# board 테스트 데이터
INSERT INTO board
SET regDate = NOW(),
updateDate = NOW(),
`type` = 'bg',
`code` = 'notice',
`name` = '공지사항';

# board 테스트 데이터
INSERT INTO board
SET regDate = NOW(),
updateDate = NOW(),
`type` = 'bg',
`code` = 'greeting',
`name` = '가입 인사';

# board 테스트 데이터
INSERT INTO board
SET regDate = NOW(),
updateDate = NOW(),
`type` = 'bg',
`code` = 'free',
`name` = '자유 게시판';

# board 테스트 데이터
INSERT INTO board
SET regDate = NOW(),
updateDate = NOW(),
`type` = 'bg',
`code` = 'declaration',
`name` = '신고 게시판';

# board 테스트 데이터
INSERT INTO board
SET regDate = NOW(),
updateDate = NOW(),
`type` = 'lol',
`code` = 'test',
`name` = '테스트 게시판';

# reactionPoint 테스트 데이터
INSERT INTO reactionPoint
SET regDate = NOW(),
updateDate = NOW(),
memberId = 1,
relTypeCode = 'article',
relId = 2;

# reactionPoint 테스트 데이터
INSERT INTO reactionPoint
SET regDate = NOW(),
updateDate = NOW(),
memberId = 1,
relTypeCode = 'article',
relId = 3;

# reactionPoint 테스트 데이터
INSERT INTO reactionPoint
SET regDate = NOW(),
updateDate = NOW(),
memberId = 2,
relTypeCode = 'article',
relId = 1;

# reactionPoint 테스트 데이터
INSERT INTO reactionPoint
SET regDate = NOW(),
updateDate = NOW(),
memberId = 2,
relTypeCode = 'article',
relId = 4;

# reactionPoint 테스트 데이터
INSERT INTO reactionPoint
SET regDate = NOW(),
updateDate = NOW(),
memberId = 3,
relTypeCode = 'article',
relId = 1;

# reactionPoint 테스트 데이터
INSERT INTO reactionPoint
SET regDate = NOW(),
updateDate = NOW(),
memberId = 2,
relTypeCode = 'article',
relId = 5;

# reactionPoint 테스트 데이터
INSERT INTO reactionPoint
SET regDate = NOW(),
updateDate = NOW(),
memberId = 3,
relTypeCode = 'article',
relId = 5;

# reactionPoint 테스트 데이터
INSERT INTO reactionPoint
SET regDate = NOW(),
updateDate = NOW(),
memberId = 2,
relTypeCode = 'article',
relId = 6;

# reply 테스트 데이터
INSERT INTO reply
SET regDate = NOW(),
updateDate = NOW(),
memberId = 1,
relTypeCode = 'article',
relId = 1,
`body` = '공지 꼭 읽어주세요.';

# reply 테스트 데이터
INSERT INTO reply
SET regDate = NOW(),
updateDate = NOW(),
memberId = 2,
relTypeCode = 'article',
relId = 1,
`body` = '확인!!';

# reply 테스트 데이터
INSERT INTO reply
SET regDate = NOW(),
updateDate = NOW(),
memberId = 3,
relTypeCode = 'article',
relId = 1,
`body` = '확인했습니다.';

# reply 테스트 데이터
INSERT INTO reply
SET regDate = NOW(),
updateDate = NOW(),
memberId = 2,
relTypeCode = 'article',
relId = 4,
`body` = '심각하네요!';

# reply 테스트 데이터
INSERT INTO reply
SET regDate = NOW(),
updateDate = NOW(),
memberId = 3,
relTypeCode = 'article',
relId = 2,
`body` = '무플 방지!';

# reply 테스트 데이터
INSERT INTO reply
SET regDate = NOW(),
updateDate = NOW(),
memberId = 3,
relTypeCode = 'article',
relId = 5,
`body` = '1빠';

# reply 테스트 데이터
INSERT INTO reply
SET regDate = NOW(),
updateDate = NOW(),
memberId = 2,
relTypeCode = 'article',
relId = 5,
`body` = '늦었네~ 2빠';

# reply 테스트 데이터
INSERT INTO reply
SET regDate = NOW(),
updateDate = NOW(),
memberId = 1,
relTypeCode = 'article',
relId = 2,
`body` = '반갑습니다. ^^';

# 테이블 구조
DESC `member`;
DESC article;
DESC board;
DESC reactionPoint;
DESC reply;
DESC chat;
DESC chatRoom;
DESC chatRoomMember;

# 테이블 조회
SELECT * FROM `member`;
SELECT * FROM article;
SELECT * FROM board;
SELECT * FROM reactionPoint;
SELECT * FROM reply;
SELECT * FROM chat;
SELECT * FROM chatRoom;
SELECT * FROM chatRoomMember;

SELECT LAST_INSERT_ID();

# 게시물 늘리기 쿼리 (memberId, boardId 바꿔가면서)
INSERT INTO article
(
    regDate, updateDate, memberId, boardId, title, `body`
)
SELECT NOW(), NOW(), 1, 1, CONCAT('롤 제목_', RAND()), CONCAT('내용_', RAND())
FROM article;

INSERT INTO article
(
    regDate, updateDate, memberId, boardId, title, `body`
)
SELECT NOW(), NOW(), 1, 5, CONCAT('배그 제목_', RAND()), CONCAT('내용_', RAND())
FROM article;