<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.koreaIT.Game_Together.repository.MemberRepository">
	
	<insert id="doJoin">
		INSERT INTO `member`
			SET regDate = NOW()
				, updateDate = NOW()
				, loginId = #{loginId}
				, loginPw = #{loginPw}
				, `name` = #{name}
				, nickname = #{nickname}
				, birthday = #{birthday}
				, gender = #{gender}
				, email = #{email}
				, cellphoneNum = #{cellphoneNum}
	</insert>
	
	<select id="getLastInsertId" resultType="int">
		SELECT LAST_INSERT_ID()
	</select>
	
	<select id="getMemberById" resultType="Member">
		SELECT *
			FROM `member`
			WHERE id = #{id}
	</select>
	
	<select id="getMemberByLoginId" resultType="Member">
		SELECT *
			FROM `member`
			WHERE loginId = #{loginId}
	</select>
	
	<select id="getMemberByNickname" resultType="Member">
		SELECT *
			FROM `member`
			WHERE nickname = #{nickname}
	</select>
	
	<select id="getMemberByEmail" resultType="Member">
		SELECT *
			FROM `member`
			WHERE email = #{email}
	</select>
	
	<select id="getMemberByCellphoneNum" resultType="Member">
		SELECT *
			FROM `member`
			WHERE cellphoneNum = #{cellphoneNum}
	</select>
	
	<update id="doModify">
		UPDATE `member`
			SET updateDate = NOW()
				, nickname = #{nickname}
				, email = #{email}
				, cellphoneNum = #{cellphoneNum}
			WHERE id = #{loginedMemberId}
	</update>
	
	<update id="doPasswordModify">
		UPDATE `member`
			SET updateDate = NOW()
				, loginPw = #{newLoginPw}
			WHERE id = #{loginedMemberId}
	</update>
	
	<select id="getMemberByNameAndEmail" resultType="Member">
		SELECT *
			FROM `member`
			WHERE `name` = #{name}
			AND email = #{email}
	</select>
	
	<update id="doWithdraw">
		UPDATE `member`
			SET updateDate = NOW()
				, delStatus = 1
				, delDate = NOW()
			WHERE id = #{loginedMemberId}
	</update>
	
	<update id="restore">
		UPDATE `member`
			SET updateDate = NOW()
				, delStatus = 0
				, delDate = NULL
			WHERE loginId = #{loginId}
			AND loginPw = #{loginPw}
	</update>
	
	<select id="getMembersCnt" resultType="int">
		SELECT COUNT(*)
    		FROM `member`
    		WHERE 1 = 1
    		<if test="authLevel != 0">
   				AND authLevel = #{authLevel}
    		</if>
    		<if test="searchKeyword != ''">
    			<choose>
    				<when test="searchKeywordType == 'loginId'">
						AND loginId LIKE CONCAT('%', #{searchKeyword}, '%')
					</when>
    				<when test="searchKeywordType == 'name'">
						AND name LIKE CONCAT('%', #{searchKeyword}, '%')
					</when>
					<when test="searchKeywordType == 'nickname'">
						AND nickname LIKE CONCAT('%', #{searchKeyword}, '%')
					</when>
					<otherwise>
						AND (
							loginId LIKE CONCAT('%', #{searchKeyword}, '%')
							OR name LIKE CONCAT('%', #{searchKeyword}, '%')
							OR nickname LIKE CONCAT('%', #{searchKeyword}, '%')
						)
					</otherwise>
    			</choose>
    		</if>
    		<if test="banStatus != 0">
    			AND banStatus = #{banStatus}
    		</if>
	</select>
	
	<select id="getMembers" resultType="Member">
		SELECT *
   			FROM `member`
    		WHERE 1 = 1
    		<if test="authLevel != 0">
   				AND authLevel = #{authLevel}
    		</if>
    		<if test="searchKeyword != ''">
    			<choose>
    				<when test="searchKeywordType == 'loginId'">
						AND loginId LIKE CONCAT('%', #{searchKeyword}, '%')
					</when>
    				<when test="searchKeywordType == 'name'">
						AND name LIKE CONCAT('%', #{searchKeyword}, '%')
					</when>
					<when test="searchKeywordType == 'nickname'">
						AND nickname LIKE CONCAT('%', #{searchKeyword}, '%')
					</when>
					<otherwise>
						AND (
							loginId LIKE CONCAT('%', #{searchKeyword}, '%')
							OR name LIKE CONCAT('%', #{searchKeyword}, '%')
							OR nickname LIKE CONCAT('%', #{searchKeyword}, '%')
						)
					</otherwise>
    			</choose>
    		</if>
    		<if test="banStatus != 0">
    			AND banStatus = #{banStatus}
    		</if>
    		ORDER BY id DESC
    		LIMIT #{limitStart}, #{itemsInAPage}
	</select>
	
	<update id="deleteMember">
		UPDATE `member`
			SET updateDate = NOW()
				, banStatus = 1
				, banDate = NOW()
			WHERE id = #{id}
	</update>
	
	<update id="releaseMember">
		UPDATE `member`
			SET updateDate = NOW()
				, banStatus = 0
				, banDate = NULL
			WHERE id = #{id}
	</update>

</mapper>